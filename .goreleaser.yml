# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
env:
  - GO111MODULE=on
  - CGO_ENABLED=1
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
builds:
  - id: regen-ledger-darwin-amd64
    binary: regen
    main: ./app/regen
    goarch:
      - amd64
    goos:
      - darwin
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    flags:
      - -trimpath
      - -mod=readonly
      - "{{ .Env.BUILD_FLAGS }}"
    ldflags:
      - "{{ .Env.LD_FLAGS }}"
  - id: regen-ledger-linux-amd64
    binary: regen
    main: ./app/regen
    goarch:
      - amd64
    goos:
      - linux
    flags:
      - "{{ .Env.BUILD_FLAGS }}"
      - -trimpath
      - -mod=readonly
    ldflags:
      - "{{ .Env.LD_FLAGS }}"
      - -extldflags "-lc -lrt -lpthread --static"
  - id: regen-ledger-linux-arm64
    binary: regen
    main: ./app/regen
    goarch:
      - arm64
    goos:
      - linux
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - "{{ .Env.BUILD_FLAGS }}"
      - -trimpath
      - -mod=readonly
    ldflags:
      - "{{ .Env.LD_FLAGS }}"
      - -extldflags "-lc -lrt -lpthread --static"
  - id: regen-ledger-windows-amd64
    binary: regen
    main: ./app/regen
    goarch:
      - amd64
    goos:
      - windows
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    flags:
      - -trimpath
      - -mod=readonly
      - -buildmode=exe
archives:
  - id: regen
    builds:
      - regen-ledger-darwin-amd64
      - regen-ledger-linux-amd64
      - regen-ledger-linux-arm64
      - regen-ledger-windows-amd64
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: true
    format: zip
    files:
      - none*  

dockers:
  - ids:
      - regen-ledger-linux-amd64
    dockerfile: _build/Dockerfile.regen
    goos: linux
    goarch: amd64
    image_templates:
      - 'ghcr.io/regen-ledger/regen-network:{{if eq .Env.MAINNET "true"}}stable{{else}}latest{{end}}'
      - 'ghcr.io/regen-ledger/regen-network:{{ .ShortCommit }}'
      - 'ghcr.io/regen-ledger/regen-network:{{ .Version }}'
brews:
  - name: "{{ .Env.HOMEBREW_NAME }}"
    tap:
      owner: regen-ledger
      name: homebrew-tap
    homepage: "https://www.regen.network/"
    description: "Blockchain-powered marketplace for climate solutions and planetary regenerations"
    custom_block: |
      {{ .Env.HOMEBREW_CUSTOM }}
    install: |
      bin.install "regen"

nfpms:
  - vendor: "Regen Network Development Inc."
    homepage: "https://www.regen.network/"
    maintainer: "Regen Network <hello@regen.network>"
    formats:
      - deb
      - rpm
    license: Apache 2.0

release:
  github:
    owner: regen-network
    name: regen
  prerelease: auto
  draft: false