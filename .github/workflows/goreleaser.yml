name: goreleaser

on: [push]
  # push:
  #   tags:
  #     - '*'
  
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: GCC multilib
        run: |
          sudo apt-get install gcc-multilib g++-multilib clang apt-file
          ls /usr/local/bin
          echo "============================================"
          whereis libxar
          echo "============================================"
          ls /usr/lib
        # git clone https://github.com/tpoechtrager/osxcross.git ../../osxcross/target
          # echo "----------------------------------------"
          # pwd
          # echo "----------------------------------------"
          # cd /home/runner/work/osxcross/target/
          # ./build_clang.sh
          # ls -l /home/runner/work/osxcross/target
          # echo "-----------------------------------"
          # ls -l /home/runner/work/osxcross/target/oclang
          # echo "-------------------------------"
          # ls -l /home/runner/work/osxcross/target/tarballs
          # build_clang.sh
      -  
        name: OSXCross for CGO Support
        run: |
          mkdir ../../osxcross
          git clone https://github.com/likhita-809/osxcross-target.git ../../osxcross/target
          # ls /home/runner/work/osxcross/target
          sudo apt-get install libcrypto++6 libssl1.1 libssl-dev --reinstall
          echo "================================="
          whereis libcrypto
          echo "================================="
          apt-file search libcrypto.so.1.0.0

          # git clone https://github.com/plentico/osxcross-target.git ../../osxcross/target
          
        
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
          # export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      # -
        # name: libxar
        # run: |
        #   echo "======================================"
        #   export LD_LIBRARY_PATH=/home/runner/work/osxcross/target/binaries/lib:$LD_LIBRARY_PATH
        #   echo $LD_LIBRARY_PATH

      -
          # go get github.com/tpoechtrager/osxcross@latest
        name: go keychain
        run: |
          go get github.com/keybase/go-keychain@latest

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
